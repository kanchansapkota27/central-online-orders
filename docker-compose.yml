version: '2'

services:
    frontend:
        build:
          context: .
          dockerfile: ./docker/frontend/Dockerfile
        volumes:
          - ./frontend:/app
          - static_volume:/static
        ports:
          - 80:80
        # environment:
        #   - WDS_SOCKET_PORT=0
        depends_on:
          - backend
    backend:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        command: >
         sh -c "
         cd /app/backend &&
         python manage.py wait_for_db &&
         python manage.py migrate &&
         python manage.py collectstatic --noinput &&
         python manage.py initadmin &&
         gunicorn core.wsgi --bind 0.0.0.0:8000 --workers 4 --threads 4
         "
        volumes:
            - static_volume:/app/backend/django_static
        ports:
            - 8000:8000     
        env_file:
            - envs/backend.env
        depends_on:
            - db
            - redis
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: ["python","/app/backend/manage.py","run_huey"]
        volumes:
            - static_volume:/app/backend/django_static
        env_file:
            - envs/backend.env
        depends_on:
            - backend
            - redis
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine 
        expose:
            - 6379
    db:
        image: postgres:13.0-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - envs/db.env
        expose:
            - 5432
    
volumes:
    static_volume: {}
    postgres_data: {}